version: 0.0.{build}

skip_branch_with_pr: true

skip_commits:
  files:
    - docs/**/*
    - media/**/*
    - "*.md"

environment:
  python_stack: python 3.12
  FLUTTER_VERSION: 3.24.1
  GITHUB_TOKEN:
    secure: 3ZgGjA1Mav7PAqgcXgNNjqfCtnL0ygyR/H5RxyOMIP8ctwVyiaU71LnxCwoYO+36
  TWINE_USERNAME: __token__
  TWINE_PASSWORD:
    secure: 174ncAbF5IjSIkmioPt62jeSnzmTlRNchUkE4QdjDWH8xK1olYtySXLJpo2q95HcP7lWJky1hv4APESiRRHnBWoY0XRFafzM/mbCDMzG1tZXiXZmpP1qzHAtRP2QSCIg18xh1TMktraUdTi7sbJnjjRhqzgbW1k0kLBxKw79MPFBhYQ/TiGcmaYWZbWVZNY3HCUCb6Dt7bG1OE2Ul9rD1gvs55xwO9Oq9FOVA1VnMYw=
  TWINE_NON_INTERACTIVE: true
  GEMFURY_TOKEN:
    secure: trYGM65OQ1+HYnOYOe/NOHrofLpP3bz64nHwVWPJhiUIYll3MrrQd7ilFNp+zSkI

  matrix:
    - job_name: Build Flet for Windows
      job_group: build_flet
      job_depends_on: build_flet_package
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022

matrix:
  fast_finish: true

stack: $python_stack

for:
  # ======================================
  #      Build Flet Client for Windows
  # ======================================

  - matrix:
      only:
        - job_name: Build Flet for Windows

    install:
      - python --version
      - pip3 install --upgrade setuptools wheel twine poetry tomlkit virtualenv
      - dart pub global activate fvm
      - set PATH=%LOCALAPPDATA%\Pub\Cache\bin;%USERPROFILE%\fvm\default\bin;%PATH%
      - fvm install %FLUTTER_VERSION%
      - fvm global %FLUTTER_VERSION%
      - flutter --version

    build_script:
      - ps: $env:flet_sdk_root="$env:APPVEYOR_BUILD_FOLDER\sdk\python"
      # patch version
      - ps: |
          $ErrorActionPreference = "Stop"
          $env:PYPI_VER = $env:APPVEYOR_BUILD_VERSION.replace("+", ".dev")
          $vp = "$env:flet_sdk_root/packages/flet-core/src/flet_core/version.py"; (Get-Content $vp).replace("version = `"`"", "version = `"$env:PYPI_VER`"") | Set-Content $vp
      - python ci/patch_toml_versions.py %flet_sdk_root%/packages/flet-desktop/pyproject.toml %PYPI_VER%
      - python ci/patch_toml_versions.py %flet_sdk_root%/packages/flet-core/pyproject.toml %PYPI_VER%

      - cd client
      - set RELEASE_DIR=build\windows\x64\runner\Release
      - flutter build windows --build-name=%APPVEYOR_BUILD_VERSION%
      # - mkdir %RELEASE_DIR%
      # - mkdir %RELEASE_DIR%\data
      # - echo "Test!" > %RELEASE_DIR%\flet.bat
      # - echo "Another thest!" > %RELEASE_DIR%\data\something.txt

      - copy "%WINDIR%\system32\msvcp140.dll" %RELEASE_DIR%
      - copy "%WINDIR%\system32\vcruntime140.dll" %RELEASE_DIR%
      - copy "%WINDIR%\system32\vcruntime140_1.dll" %RELEASE_DIR%
      - dir %RELEASE_DIR%
      - ren build\windows\x64\runner\Release flet
      - cd build\windows\x64\runner
      - 7z a flet-windows.zip flet
      - mkdir %flet_sdk_root%\packages\flet-desktop\src\flet_desktop\app
      - xcopy flet %flet_sdk_root%\packages\flet-desktop\src\flet_desktop\app\flet\ /s /e

      # install poetry env
      - cd %flet_sdk_root%
      - poetry install

      # build "flet-desktop" package
      - cd packages\flet-desktop
      - poetry build
      - ps: |
          $ErrorActionPreference = "Continue"
          Get-ChildItem -Path dist/*-py3-none-any.whl | ForEach-Object {
            python $env:APPVEYOR_BUILD_FOLDER\ci\repackage_wheel_with_tag.py $_.FullName "py3-none-win_amd64"
            python $env:APPVEYOR_BUILD_FOLDER\ci\repackage_wheel_with_tag.py $_.FullName "py3-none-win32"
            Remove-Item $_.FullName
          }
          $ErrorActionPreference = "Stop"
      - cd %APPVEYOR_BUILD_FOLDER%
      - dir %flet_sdk_root%\packages\flet-desktop\dist

      # publish
      - ps: |
          if (($env:APPVEYOR_REPO_BRANCH -eq "main" -or $env:APPVEYOR_REPO_TAG_NAME) -and (-not $env:APPVEYOR_PULL_REQUEST_NUMBER)) {
              twine upload $env:flet_sdk_root\packages\flet-desktop\dist\*
          } elseif (-not $env:APPVEYOR_PULL_REQUEST_NUMBER) {
            $wheels = (Get-ChildItem $env:flet_sdk_root/packages/flet-desktop/dist/*.whl | Select-Object -ExpandProperty FullName)
            foreach ($wheel in $wheels) {
                curl.exe -sF package=@$wheel https://$env:GEMFURY_TOKEN@push.fury.io/flet/
            }
          }

    test: off

    artifacts:
      - path: client\build\windows\x64\runner\flet-windows.zip
      - path: sdk\python\packages\flet-desktop\dist\*.whl

    deploy:
      provider: GitHub
      auth_token: $(GITHUB_TOKEN)
      release: $(APPVEYOR_REPO_TAG_NAME)
      artifact: flet_windows
      on:
        APPVEYOR_REPO_TAG: true
